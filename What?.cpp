#include <chrono>
#include <iostream>
#include <string>
#include <termios.h>
#include <thread>
#include <unistd.h>
#include <vector>
using namespace std;
// vector<int> ttm;
// cout << "\x1B[2J\x1B[H";
int SQR = 27;
std::chrono::milliseconds stop(500);
int getch() {
  struct termios oldt, newt;
  int ch;
  tcgetattr(STDIN_FILENO, &oldt);
  newt = oldt;
  newt.c_lflag &= ~(ICANON | ECHO);
  tcsetattr(STDIN_FILENO, TCSANOW, &newt);
  ch = getchar();
  tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
  return ch;
}


// can work
// ⬛️
// ⬜️

// can't work (IDK why ._.)
// 🟥
// 🟧
// 🟨
// 🟩
// 🟦
// 🟪
// 🟫

void def_win_user(){
  cout << "\x1B[2J\x1B[H";
  string user_win[27][27] = {
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬛️","⬛️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️","⬜️","⬛️","⬛️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬛️","⬛️","⬜️","⬛️","⬛️","⬛️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬛️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️"},
    {"⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️"},
    {"⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬛️","⬛️","⬜️"},
    {"⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬜️"},
    {"⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬛️","⬛️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️"},
    {"⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬛️","⬛️","⬜️","⬜️","⬛️","⬜️","⬜️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬛️","⬜️","⬜️","⬛️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"},
    {"⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️","⬜️"}
  };

  for(int i = 0; i < SQR; i++){
    for(int j = 0; j < SQR; j++){
      cout << user_win[i][j];
    }
    std::this_thread::sleep_for(stop);
    cout<<endl;
  }
}

void LEVEV_1(){
  string level_1[27][27] = {
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  ///\-MAINHERO-/\----------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  //------------------------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  //------------------------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  //------------------------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  //------------------------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  //------------------------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  //------------------------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","  ",  "  ","  ","⬜️"},
  //------------------------------------------------------------------------------------------------------------------------------------------------------------//
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","  ",  "  ","  ","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","  ",  "  ","  ","⬜️"},
  {"⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️",  "⬜️","⬜️","⬜️"}};
  int optX = 1;//start x
  int optY = 1;//start y
  string mapGame[SQR][SQR];
  while (true) {
    for (int i = 0; i < SQR; i++) {
      for (int j = 0; j < SQR; j++) {
        mapGame[i][j] = level_1[i][j];

        mapGame[optY][optX] = "⬛️";
        mapGame[optY][optX+1] = "⬛️";
        mapGame[optY][optX+2] = "⬛️";

        mapGame[optY+1][optX] = "⬛️";
        mapGame[optY+1][optX+1] = "⬛️";
        mapGame[optY+1][optX+2] = "⬛️";

        mapGame[optY+2][optX] = "⬛️";
        mapGame[optY+2][optX+1] = "⬛️";
        mapGame[optY+2][optX+2] = "⬛️";

        cout<< mapGame[i][j];
      }
      cout << endl;
    }
    if((optX == 23) and (optY == 23)){
      std::this_thread::sleep_for(stop);
      def_win_user();
      break;
    }

    int key = getch();
    cout<<key;
    switch (key) {
      case 10:
        cout << "\x1B[2J\x1B[H";
        break;

      case 119://key w
        if (optY > 0) {
          optY--;
        }
        cout << "\x1B[2J\x1B[H";
        break;

      case 115://key s
        if (optY < SQR-3) {
          optY++;
        }
        cout << "\x1B[2J\x1B[H";
        break;

      case 97://key a
        if (optX > 0) {
          optX--;
        }
        cout << "\x1B[2J\x1B[H";
        break;

      case 100://key d
        if (optX < SQR-3) {
          optX++;
        }
        cout << "\x1B[2J\x1B[H";
        break;

      default:
        break;
    }
  }
}


int main() {
  LEVEV_1();


  return 0;
}


