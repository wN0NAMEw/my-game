// –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –ö–û–î –°–õ–ï–î–£–ï–¢ –ó–ê–ü–£–°–ö–ê–¢–¨ –ù–ê –°–ê–ô–¢–ï replit.com

#include <chrono>
#include <iostream>
#include <string>
#include <termios.h>
#include <thread>
#include <unistd.h>
#include <vector>
using namespace std;
// vector<int> ttm;
// cout << "\x1B[2J\x1B[H";
int SQR = 10;

int getch() {
 struct termios oldt, newt;
 int ch;
 tcgetattr(STDIN_FILENO, &oldt);
 newt = oldt;
 newt.c_lflag &= ~(ICANON | ECHO);
 tcsetattr(STDIN_FILENO, TCSANOW, &newt);
 ch = getchar();
 tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
 return ch;
}

struct levels{
  int idName = 1;
  string mapBase[10][10];
};

// can work
// ‚¨õÔ∏è
// ‚¨úÔ∏è
// üü•
// üüß
// üü®
// üü©
// üü¶
// üü™
// üü´

void defWin(){
  std::chrono::milliseconds stop(200);
  cout << "\x1B[2J\x1B[H";
  string mgbWin[10][10] = {
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","üü®","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü®","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","üü®","üü®","‚¨úÔ∏è","üü®","üü®","‚¨úÔ∏è","üü®","üü®","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","üü®","üü®","‚¨úÔ∏è","üü®","üü®","‚¨úÔ∏è","üü®","üü®","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","üü®","üü®","üü®","üü®","üü®","üü®","üü®","üü®","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","üü®","üü®","üü®","üü•","üü•","üü®","üü®","üü®","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","üü®","üü®","üü®","üü•","üü•","üü®","üü®","üü®","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","üü®","üü®","üü®","üü•","üü•","üü®","üü®","üü®","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","üü®","üü®","üü®","üü®Ô∏è","üü®Ô∏è","üü®","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  };
  for(int i = 0; i < 10; i++){
    for(int j = 0; j < 10; j++){
      cout<<mgbWin[i][j];
    }
    std::this_thread::sleep_for(stop);
    cout<<endl;
  }
  cout<<"You Win!"<<endl;
  exit(0);
}
void defLose(){
  std::chrono::milliseconds stop(200);
  cout << "\x1B[2J\x1B[H";
  string mgbLose[10][10] = {
  {"‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  {"‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è"},
  };
  for(int i = 0; i < 10; i++){
    for(int j = 0; j < 10; j++){
      cout<<mgbLose[i][j];
    }
    std::this_thread::sleep_for(stop);
    cout<<endl;
  }
  cout<<"You Lose!"<<endl;
  exit(0);
}

void defBetaGame(){
  cout << "\x1B[2J\x1B[H";
  string mgbLVL1[10][10]={
    {"üü•","üü•","üü•","üü•","üü•","üü•Ô∏è","üü•","üü•","üü•","üü•"},
    {"üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•"},
    {"üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","üü•","üü•","üü•","üü•","‚¨úÔ∏è","üü•"},
    {"üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","üü•","üü´","üü´","üü•","‚¨úÔ∏è","üü•"},
    {"üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","üü•","üü´","üü´","üü•","‚¨úÔ∏è","üü•"},
    {"üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","üü•","üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","üü•"},
    {"üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","üü•"},
    {"üü•","‚¨úÔ∏è","üü•","üü•","üü•","üü•","üü•Ô∏è","üü•","‚¨úÔ∏è","üü•"},
    {"üü•","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•"},
    {"üü•","üü•","üü•","üü•","üü•","üü•Ô∏è","üü•","üü•","üü•","üü•"},
    };

  int countBroun = 0;

  for(int i = 0; i < 10; i++){
    for(int j = 0; j < 10; j++){
      if(mgbLVL1[i][j] == "üü´"){
        countBroun++;
      }
    }
  }
  int optX = 1;
  int optY = 1;
  string mapGame[SQR][SQR];
  while (true) {
    cout<<"–î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–∫—Ä–∞—Å–∏—Ç—å –≤—Å–µ –∫–æ—Ä–∏—á–Ω–µ–≤—ã–µ –∫–≤–∞–¥—Ä–∞—Ç—ã"<<endl;
    cout<<"–û–ø–∞—Å–∞–π—Ç–µ—Å—å –∫—Ä–∞—Å–Ω–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏"<<endl;
    cout<<"—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"<<endl;
    cout<<"   W      –∑–∞–∫—Ä–∞—Å–∏—Ç—å:   "<<endl;
    cout<<" A S D      SPASE"<<endl;
    int countGreen = 0;
    for (int i = 0; i < SQR; i++) {
      for (int j = 0; j < SQR; j++) {
        mapGame[i][j] = mgbLVL1[i][j];
        if(mgbLVL1[i][j] == "üü©"){
          countGreen++;
        }
        if(mgbLVL1[optY][optX] == "üü•"){
          defLose();
        }
        if(countBroun == countGreen){
          defWin();
        }


        mapGame[optY][optX] = "‚¨õÔ∏è";
        cout<< mapGame[i][j];
      }
      cout << endl;
    }

    int key = getch();
    switch (key){
    case 32:
      if(mgbLVL1[optY][optX] == "üü´"){
        mgbLVL1[optY][optX] = "üü©";
      }
      cout << "\x1B[2J\x1B[H";
      break;

    case 119://key w
      if (optY > 0) {
        optY--;
      }
      cout << "\x1B[2J\x1B[H";
      break;

    case 115://key s
      if (optY < 9) {
        optY++;
      }
      cout << "\x1B[2J\x1B[H";
      break;

    case 97://key a
      if (optX > 0) {
        optX--;
      }
      cout << "\x1B[2J\x1B[H";
      break;

    case 100://key d
      if (optX < 9) {
        optX++;
      }
      cout << "\x1B[2J\x1B[H";
      break;

    default:
      break;
    }
  }
}

int main() {
  cout << "\x1B[2J\x1B[H";
  string startMenu[14][21] = {
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","üü©","‚¨úÔ∏è","‚¨úÔ∏è","üü©","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","üü©","‚¨úÔ∏è","‚¨úÔ∏è","üü©","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","üü©","üü©","üü©","üü©","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•","üü•","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü©","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","üü•","üü•","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","üü©","üü©","üü©","üü©","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è","üü•","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨õÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"},
  {"‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è","‚¨úÔ∏è"}};

  int YorN = 1;
  
  int optX = 2;
  int optY = 13;
  string mapGame[14][21];
  while (true) {
    for (int i = 0; i < 14; i++) {
      for (int j = 0; j < 21; j++) {
        mapGame[i][j] = startMenu[i][j];

        mapGame[optY][optX+3] = "üü¶";
        mapGame[optY][optX+2] = "üü¶";
        mapGame[optY][optX+1] = "üü¶";
        mapGame[optY][optX] = "üü¶";

        cout<< mapGame[i][j];
      }
      cout << endl;
    }
    cout<<"            <---  A |_| D  --->"<<endl;
    int key = getch();
    switch (key){
    case 32: //spase
      if(YorN == 1){
        defBetaGame();
      }
      else{
        exit(0);
      }
      cout << "\x1B[2J\x1B[H";
      break;

    case 97: //key a
      optX = 2;
      YorN = 1;
      cout << "\x1B[2J\x1B[H";
      break;

    case 100: //key d
      optX = 15;
      YorN = 0;
      cout << "\x1B[2J\x1B[H";
      break;

    default:
      break;
    }
  }
  return 0;
}
